import { TwoLetterIsoCountryCode } from "./geocoding-api/country-codes";

export enum WHORegion {
  AFR = "AFR",
  AMR = "AMR",
  SEAR = "SEAR",
  EUR = "EUR",
  EMR = "EMR",
  WPR = "WPR"
}

const countryAlphaTwoCodeToWhoRegionsMap: Partial<Record<TwoLetterIsoCountryCode, WHORegion>> = {
  AF: WHORegion.EMR,
  AL: WHORegion.EUR,
  DZ: WHORegion.AFR,
  AS: WHORegion.WPR,
  AD: WHORegion.EUR,
  AO: WHORegion.AFR,
  AI: undefined,
  AG: WHORegion.AMR,
  AR: WHORegion.AMR,
  AM: WHORegion.EUR,
  AW: undefined,
  AU: WHORegion.WPR,
  AT: WHORegion.EUR,
  AZ: WHORegion.EUR,
  BS: WHORegion.AMR,
  BH: WHORegion.EMR,
  BD: WHORegion.SEAR,
  BB: WHORegion.AMR,
  BY: WHORegion.EUR,
  BE: WHORegion.EUR,
  BZ: WHORegion.AMR,
  BJ: WHORegion.AFR,
  BM: undefined,
  BT: WHORegion.SEAR,
  BO: WHORegion.AMR,
  BQ: undefined,
  BA: WHORegion.EUR,
  BW: WHORegion.AFR,
  BR: WHORegion.AMR,
  VG: undefined,
  BN: WHORegion.WPR,
  BG: WHORegion.EUR,
  BF: WHORegion.AFR,
  BI: WHORegion.AFR,
  CV: WHORegion.AFR,
  KH: WHORegion.WPR,
  CM: WHORegion.AFR,
  CA: WHORegion.AMR,
  KY: undefined,
  CF: WHORegion.AFR,
  TD: WHORegion.AFR,
  CL: WHORegion.AMR,
  CN: WHORegion.WPR,
  CX: undefined,
  CC: undefined,
  CO: WHORegion.AMR,
  KM: WHORegion.AFR,
  CG: WHORegion.AFR,
  CK: WHORegion.WPR,
  CR: WHORegion.AMR,
  HR: WHORegion.EUR,
  CU: WHORegion.AMR,
  CW: undefined,
  CY: WHORegion.EUR,
  CZ: WHORegion.EUR,
  CI: WHORegion.AFR,
  KP: WHORegion.SEAR,
  CD: WHORegion.AFR,
  DK: WHORegion.EUR,
  DJ: WHORegion.EMR,
  DM: WHORegion.AMR,
  DO: WHORegion.AMR,
  EC: WHORegion.AMR,
  EG: WHORegion.EMR,
  SV: WHORegion.AMR,
  GQ: WHORegion.AFR,
  ER: WHORegion.AFR,
  EE: WHORegion.EUR,
  SZ: WHORegion.AFR,
  ET: WHORegion.AFR,
  FK: undefined,
  FO: undefined,
  FJ: WHORegion.WPR,
  FI: WHORegion.EUR,
  FR: WHORegion.EUR,
  GF: undefined,
  PF: undefined,
  GA: WHORegion.AFR,
  GM: WHORegion.AFR,
  GE: WHORegion.EUR,
  DE: WHORegion.EUR,
  GH: WHORegion.AFR,
  GI: undefined,
  GR: WHORegion.EUR,
  GL: undefined,
  GD: WHORegion.AMR,
  GP: undefined,
  GU: undefined,
  GT: WHORegion.AMR,
  GG: undefined,
  GN: WHORegion.AFR,
  GW: WHORegion.AFR,
  GY: WHORegion.AMR,
  HT: WHORegion.AMR,
  VA: undefined,
  HN: WHORegion.AMR,
  HU: WHORegion.EUR,
  IS: WHORegion.EUR,
  IN: WHORegion.SEAR,
  ID: WHORegion.SEAR,
  IR: WHORegion.EMR,
  IQ: WHORegion.EMR,
  IE: WHORegion.EUR,
  IM: undefined,
  IL: WHORegion.EUR,
  IT: WHORegion.EUR,
  JM: WHORegion.AMR,
  JP: WHORegion.WPR,
  JE: undefined,
  JO: WHORegion.EMR,
  KZ: WHORegion.EUR,
  KE: WHORegion.AFR,
  KI: WHORegion.WPR,
  XK: undefined,
  KW: WHORegion.EMR,
  KG: WHORegion.EUR,
  LA: WHORegion.WPR,
  LV: WHORegion.EUR,
  LB: WHORegion.EMR,
  LS: WHORegion.AFR,
  LR: WHORegion.AFR,
  LY: WHORegion.EMR,
  LI: undefined,
  LT: WHORegion.EUR,
  LU: WHORegion.EUR,
  MG: WHORegion.AFR,
  MW: WHORegion.AFR,
  MY: WHORegion.WPR,
  MV: WHORegion.SEAR,
  ML: WHORegion.AFR,
  MT: WHORegion.EUR,
  MH: WHORegion.WPR,
  MQ: undefined,
  MR: WHORegion.AFR,
  MU: WHORegion.AFR,
  YT: undefined,
  MX: WHORegion.AMR,
  FM: WHORegion.WPR,
  MC: WHORegion.EUR,
  MN: WHORegion.WPR,
  ME: WHORegion.EUR,
  MS: undefined,
  MA: WHORegion.EMR,
  MZ: WHORegion.AFR,
  MM: WHORegion.SEAR,
  NA: WHORegion.AFR,
  NR: WHORegion.WPR,
  NP: WHORegion.SEAR,
  NL: WHORegion.EUR,
  NC: undefined,
  NZ: WHORegion.WPR,
  NI: WHORegion.AMR,
  NE: WHORegion.AFR,
  NG: WHORegion.AFR,
  NU: WHORegion.WPR,
  NF: undefined,
  MK: WHORegion.EUR,
  MP: undefined,
  NO: WHORegion.EUR,
  PS: WHORegion.EMR,
  OM: WHORegion.EMR,
  PK: WHORegion.EMR,
  PW: WHORegion.WPR,
  PA: WHORegion.AMR,
  PG: WHORegion.WPR,
  PY: WHORegion.AMR,
  PE: WHORegion.AMR,
  PH: WHORegion.WPR,
  PN: undefined,
  PL: WHORegion.EUR,
  PT: WHORegion.EUR,
  PR: undefined,
  QA: WHORegion.EMR,
  KR: WHORegion.WPR,
  MD: WHORegion.EUR,
  RO: WHORegion.EUR,
  RU: WHORegion.EUR,
  RW: WHORegion.AFR,
  RE: undefined,
  BL: undefined,
  SH: undefined,
  KN: WHORegion.AMR,
  LC: WHORegion.AMR,
  MF: undefined,
  PM: undefined,
  VC: WHORegion.AMR,
  WS: WHORegion.WPR,
  SM: WHORegion.EUR,
  ST: WHORegion.AFR,
  SA: WHORegion.EMR,
  SN: WHORegion.AFR,
  RS: WHORegion.EUR,
  SC: WHORegion.AFR,
  SL: WHORegion.AFR,
  SG: WHORegion.WPR,
  SX: undefined,
  SK: WHORegion.EUR,
  SI: WHORegion.EUR,
  SB: WHORegion.WPR,
  SO: WHORegion.EMR,
  ZA: WHORegion.AFR,
  SS: WHORegion.AFR,
  ES: WHORegion.EUR,
  LK: WHORegion.SEAR,
  SD: WHORegion.EMR,
  SR: WHORegion.AMR,
  SJ: undefined,
  SE: WHORegion.EUR,
  CH: WHORegion.EUR,
  SY: WHORegion.EMR,
  TJ: WHORegion.EUR,
  TW: undefined,
  TH: WHORegion.SEAR,
  GB: WHORegion.EUR,
  TL: WHORegion.SEAR,
  TG: WHORegion.AFR,
  TK: undefined,
  TO: WHORegion.WPR,
  TT: WHORegion.AMR,
  TN: WHORegion.EMR,
  TR: WHORegion.EUR,
  TM: WHORegion.EUR,
  TC: undefined,
  TV: WHORegion.WPR,
  UG: WHORegion.AFR,
  UA: WHORegion.EUR,
  AE: WHORegion.EMR,
  TZ: WHORegion.AFR,
  VI: undefined,
  US: WHORegion.AMR,
  UY: WHORegion.AMR,
  UZ: WHORegion.EUR,
  VU: WHORegion.WPR,
  VE: WHORegion.AMR,
  VN: WHORegion.WPR,
  WF: undefined,
  EH: undefined,
  YE: WHORegion.EMR,
  ZM: WHORegion.AFR,
  ZW: WHORegion.AFR
};

export const getWHORegionFromAlphaTwoCode = (countryAlphaTwoCode: TwoLetterIsoCountryCode): WHORegion | undefined => {
  return countryAlphaTwoCodeToWhoRegionsMap[countryAlphaTwoCode];
}